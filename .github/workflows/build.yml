name: Build and Publish

on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
    name: Build (${{ matrix.name }})
    strategy:
        matrix:
          include:
            # COMMENTED OUT: Windows and Mac builds for faster testing
            # - name: Windows x64
            #   os: windows-latest
            #   extension: ".zip"
            #   runtime: "win-x64"
            # - name: macOS x64
            #   os: macos-13
            #   runtime: "osx-x64"
            #   extension: ".zip"
            
            # Only build Linux for now (faster)
            - name: Linux x64
              os: ubuntu-latest
              extension: ".tar.gz"
              runtime: "linux-x64"
        fail-fast: false
  
    runs-on: ${{ matrix.os }}

    env:
        PROJECT_NAME: "Angor"
        SOLUTION_PATH: "src/Angor.sln"
        PROJECT_PATH: "src/Angor/Client/Angor.Client.csproj"

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        global-json-file: global.json

    - name: Variables
      run: |
          echo VERSION=$(npm run version --silent) >> $GITHUB_ENV
      shell: bash

    - name: Publish
      run: dotnet publish -c Release -r ${{matrix.runtime}} /p:Version=${{ env.VERSION }}.${{ github.run_number }} -v m -o publish  ${{env.PROJECT_PATH}}

    - name: Run Tests
      continue-on-error: true
      run: dotnet test -c Release -r ${{matrix.runtime}} --verbosity normal  ${{env.SOLUTION_PATH}} 

    - name: Zip Release
      run: |
        cd publish
        zip -r "../angor-web-${{ env.VERSION }}-${{ matrix.runtime }}.zip" .
      shell: bash

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: angor-web-${{ env.VERSION }}-${{ matrix.runtime }}.zip
        path: angor-web-${{ env.VERSION }}-${{ matrix.runtime }}.zip

    # COMMENTED OUT: Desktop app building (Tauri/Rust) - speeds up testing
    # - name: Install Rust (Stable)
    #   uses: actions-rs/toolchain@v1
    #   with:
    #       toolchain: stable
    #       override: true

    # - name: Install Linux dependencies
    #   if: matrix.os == 'ubuntu-latest'
    #   run: |
    #         sudo apt-get update
    #         sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev webkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libsoup-3.0-dev libjavascriptcoregtk-4.1-dev

    # - name: Install and build
    #   run: |
    #     npm install
    #     npm run tauri:build:${{ matrix.runtime }}

    # All the desktop app upload steps commented out...
    

  create-release:
    name: Publish (Release)
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Variables
      run: |
          echo VERSION=$(npm run version --silent) >> $GITHUB_ENV
      shell: bash

    - name: Download Artifacts 
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        merge-multiple: true
    
    - name: List Files
      run: ls -R

    - name: Create Release and Upload Assets
      uses: softprops/action-gh-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: ${{ env.VERSION }}
          name: Angor (${{ env.VERSION }})
          draft: true
          files: |
            artifacts/*

  deploy-release:
    name: Deploy (Test)
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Variables
      run: |
          echo VERSION=$(npm run version --silent) >> $GITHUB_ENV
      shell: bash

    - name: Download Artifacts 
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        merge-multiple: true
  
    - name: List Files
      run: ls -R

    - name: Unzip Artifact
      run: |
        unzip artifacts/angor-web-${{ env.VERSION }}-linux-x64.zip -d dist
      shell: bash

    - name: Copy index.html to 404.html
      run: cp dist/wwwroot/index.html dist/wwwroot/404.html
      
    - name: Add .nojekyll file
      run: touch dist/wwwroot/.nojekyll

    - name: Deploy to Github Pages
      uses: JamesIves/github-pages-deploy-action@v4
      with:
          branch: gh-pages
          folder: dist/wwwroot
          repository-name: ${{ github.repository_owner }}/angor-test
          token: ${{ secrets.ANGOR_DEBUG_DEPLOY_TOKEN }}
    
    # FOR NOW: Just upload as artifact for manual testing
    - name: Upload Web Build
      uses: actions/upload-artifact@v4
      with:
        name: angor-web-build
        path: dist/wwwroot